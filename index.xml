<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chunbong</title>
    <link>https://chunbong.github.io/</link>
    <description>Recent content on Chunbong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Sep 2019 13:20:38 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lombok cannot find sybol 오류 해결 방법</title>
      <link>https://chunbong.github.io/post/java_web_programming/lombok-error-solving/</link>
      <pubDate>Fri, 06 Sep 2019 13:20:38 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/lombok-error-solving/</guid>
      <description>SearchParam.java에 Lombok annotation을 사용했다. 코드는 에러 표시 없이 잘 활성화 되었고, 위 사진처럼 사용가능한 메서드에 Lombok annotation이 생성해준 메서드들이 잘 나왔다. 그런데 계속 cannot find symbol 오류가 발생했다🤨 더 멘붕인건 Lombok annotation이 생성해준 equals()는 문제없이 호출이 된다는 것이었다&amp;hellip;.

설정 과정  IntelliJ - lombok 플러그인 설치 build.gradle에 compile &amp;quot;org.projectlombok:lombok:1.18.8&amp;quot; 추가 설정 - Enable annotation processing 체크  
Check 사항  설정 - Build, Execution, Deployment - Complier - Annotation Processors - Enable annotation processing에 체크했는지</description>
    </item>
    
    <item>
      <title>190905</title>
      <link>https://chunbong.github.io/post/til/190905/</link>
      <pubDate>Thu, 05 Sep 2019 04:23:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190905/</guid>
      <description>Java Web Programming 새롭게 알게 된 내용  HttpServletRequest 객체를 사용해서 모든 헤더 정보를 출력하기  getHeaderNames(), getHeader() 메서드 사용  HttpServletRequest 객체를 사용해서 파라미터를 읽고 출력하기  getParameter() 메서드 사용  이 외 HttpServletRequest 객체를 사용해서 여러 정보 출력하기  getRequsetURI() : 주소에서 포트 번호 이하에 있는 값을 return getRequsetURL() : 전체 주소를 return getContextPath() : 웹 애플리케이션과 매핑된 path를 return getRemoteAddr() : 클라이언트의 주소 값을 return  부스트코스 강의 과제로 현재 시간을 보여주는 웹 페이지를 위한 서블릿을 구현했다.</description>
    </item>
    
    <item>
      <title>Java 웹 프로그래밍 기초 -03. Servlet 라이프 사이클, service 메서드와 템플릿 메서드 패턴</title>
      <link>https://chunbong.github.io/post/java_web_programming/basic-03-servlet-lifecycle-and-service/</link>
      <pubDate>Thu, 05 Sep 2019 02:23:31 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/basic-03-servlet-lifecycle-and-service/</guid>
      <description>부스트코스 - 웹 프로그래밍에서 배운 내용을 정리
 
Servlet 라이프 사이클 
 Servlet 라이플 사이클 [출처] slipp.net

WAS는 서블릿 요청을 받으면(=URL로 클라이언트가 서버에 요청하면) 해당 서블릿이 메모리에 있는지 확인한다.
만약 메모리에 없으면 해당 서블릿 클래스를 메모리에 올리고(생성자 실행), init(), service()를 실행한다. 또한 WAS는 HttpSevletRequest, HttpServletResponse 객체를 생성해서 service() 메서드의 파라미터로 전달한다. 따라서 요청에 대한 처리, 응답은 service() 메서드를 오버라이딩해서 구현하는 것이다.
만약 메모리에 클라이언트가 요청한 서블릿이 있다면 서블릿 객체를 생성하지 않고 service()만 호출한다.</description>
    </item>
    
    <item>
      <title>190904</title>
      <link>https://chunbong.github.io/post/til/190904/</link>
      <pubDate>Wed, 04 Sep 2019 04:23:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190904/</guid>
      <description>Java Web Programming 새롭게 알게 된 내용  HttpServletRequset, HttpServletResponse 객체의 생성 시점과 전달 과정, 역할  클라이언트의 요청이 있을 때 WAS가 두 객체를 생성해서 요청을 처리하는 servlet으로 전달 HttpServletRequset는 요청에 대한 모든 정보를 메서드를 통해 제공하는 객체 HttpServletResponse는 응답에 필요한 정보를 담는 객   궁금한 내용  Lombok - Symbol을 찾을 수 없다는 에러 해결해야 됨.. 정말 뭐 때문이냐아🤨  
Python 새롭게 알게 된 내용  lambda가 뭔지 딕셔너리 객체를 key or value를 기준으로 정렬하기 → lambda or operator 모듈을 사용 combinations 사용하기  combinations의 2번째 인자는 2부터&amp;hellip; !</description>
    </item>
    
    <item>
      <title>2018년 KAKAO BLIND RECRUITMENT - 후보키</title>
      <link>https://chunbong.github.io/post/algorithm/problem-03-kakaoblind-03/</link>
      <pubDate>Wed, 04 Sep 2019 03:19:11 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-03-kakaoblind-03/</guid>
      <description>Code from itertools import combinations def checkDuplicate(data, length): if len(set(data)) == length: return True # 중복 없음 return False # 중복 있음 def solution(relation): answer = 0 tupleLength = len(relation) columnLength = len(relation[0]) columnList = [i for i in range(columnLength)] columnData = {} for column in range(columnLength): for t in range(tupleLength): if column in columnData: columnData[column].append(relation[t][column]) else: columnData[column] = [relation[t][column]] superkey = [] for key in range(columnLength): if checkDuplicate(columnData[key], tupleLength): superkey.</description>
    </item>
    
    <item>
      <title>190903</title>
      <link>https://chunbong.github.io/post/til/190903/</link>
      <pubDate>Tue, 03 Sep 2019 04:23:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190903/</guid>
      <description>Python 새롭게 알게 된 내용  나눗셈 결과를 소수로 얻고 싶을 때 → ~~float(a) / float(b)~~  a / b 만 해도 된다 ( 190904 )  특정 기준으로 정렬하기 → key parameter를 사용  
알고리즘  2019 KAKAO BLIND RECRUITMENT - 오픈채팅방, 실패율 문제 해결  새롭게 알게 된 내용  나는 반복문을 줄여야겠다는 생각에 하나의 반복문 안에서 너무 많은 문제를 해결하려고 하는 것 같다. 중첩되지 않게 여러 번 순회해서 더 나은 자료를 만들고, 그 자료를 사용해서 문제를 더 쉽게 푸는 방법들도 생각해봐야겠다.</description>
    </item>
    
    <item>
      <title>2018년 KAKAO BLIND RECRUITMENT - 실패율</title>
      <link>https://chunbong.github.io/post/algorithm/problem-02-kakaoblind-02/</link>
      <pubDate>Tue, 03 Sep 2019 03:20:38 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-02-kakaoblind-02/</guid>
      <description>Code from operator import itemgetter def solution(N, stages): answer = [] stages.sort() l = len(stages) stages.append(501) now_stage = stages[0] not_clear_user = 0 failure_rate = {} check = [False] * N i = 0 while True: if stages[i] == now_stage: not_clear_user += 1 else: reched_user = l - i + not_clear_user if now_stage != N+1: failure_rate[now_stage] = float(not_clear_user) / float(reched_user) check[now_stage-1] = True now_stage = stages[i] if now_stage == N+1: break not_clear_user = 1 if stages[i] == 501: break i += 1 temp = sorted(failure_rate.</description>
    </item>
    
    <item>
      <title>2018년 KAKAO BLIND RECRUITMENT - 오픈채팅방</title>
      <link>https://chunbong.github.io/post/algorithm/problem-01-kakaoblind-01/</link>
      <pubDate>Tue, 03 Sep 2019 03:12:52 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-01-kakaoblind-01/</guid>
      <description>Code from collections import deque def solution(record): answer = [] info = [] queue = deque() user = {} for case in record: # 1 info = case.split() queue.append((info[0], info[1])) if len(info) == 3: user[info[1]] = info[2] # 2 while(queue): cmd, id = queue.popleft() nickname = user[id] if cmd == &amp;#34;Enter&amp;#34;: answer.append(nickname + &amp;#34;님이 들어왔습니다.&amp;#34;) elif cmd == &amp;#34;Leave&amp;#34;: answer.append(nickname + &amp;#34;님이 나갔습니다.&amp;#34;) return answer 
풀이 방법  입력을 쪼개서 (명령어, ID) 쌍을 큐에 넣고, (ID : 닉네임)을 딕셔너리에 추가했다.</description>
    </item>
    
    <item>
      <title>정렬 - key 매개 변수, operator 모듈, 딕셔너리 정렬</title>
      <link>https://chunbong.github.io/post/python/sort-01/</link>
      <pubDate>Tue, 03 Sep 2019 02:20:56 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/python/sort-01/</guid>
      <description>sorted() 모든 iterable을 정렬할 수 있다

key 매개 변수  각 정렬 요소에 대해 호출할 함수를 지정할 수 있다. key 매개 변수로 지정된 함수는 정렬 목적으로 사용할 키를 반환해야 한다. 여러 레코드가 같은 키를 가질 때, 원래의 순서가 유지된다 → 정렬 안정성  
특정 인덱스를 기준으로 정렬하기 &amp;gt;&amp;gt;&amp;gt; student_tuples = [ ... (&amp;#39;john&amp;#39;, &amp;#39;A&amp;#39;, 15), ... (&amp;#39;jane&amp;#39;, &amp;#39;B&amp;#39;, 12), ... (&amp;#39;dave&amp;#39;, &amp;#39;B&amp;#39;, 10), ... ] &amp;gt;&amp;gt;&amp;gt; sorted(student_tuples, key=lambda student: student[2]) # sort by age [(&amp;#39;dave&amp;#39;, &amp;#39;B&amp;#39;, 10), (&amp;#39;jane&amp;#39;, &amp;#39;B&amp;#39;, 12), (&amp;#39;john&amp;#39;, &amp;#39;A&amp;#39;, 15)]</description>
    </item>
    
    <item>
      <title>190902</title>
      <link>https://chunbong.github.io/post/til/190902/</link>
      <pubDate>Mon, 02 Sep 2019 04:23:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190902/</guid>
      <description>Java Web Programming 새롭게 알게 된 내용  스프링 부트에서 주소가 겹치는 것은 클래스 내 메서드 단위에서의 문제이고, 클래스 단위에서 @RequestMapping 주소가 겹치는 것은 상관없다 POST 요청에 대해서 요청 body에 있는 내용을 꺼내기, JSON 형태로 응답 리턴하기 REST API  HTTP Method를 통해서 Resource, 즉 데이터 자원을 처리하는 방법을 정의한 것  Lombok 사용 이유, 세팅 방  궁금한 내용  @RequsetMapping에 method 속성을 지정할 때와 안할 때 produces={&amp;quot;application-json&amp;quot;} 이 default 인가?</description>
    </item>
    
    <item>
      <title>190901</title>
      <link>https://chunbong.github.io/post/til/190901/</link>
      <pubDate>Sun, 01 Sep 2019 04:23:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190901/</guid>
      <description> Java Web Programming 새롭게 알게 된 내용  요청이 있을 때 WAS가 Servlet을 어떻게 처리하는지 Servlet 라이프사이클  init() - service() - destroy()  HttpServlet의 service() 메서드는 템플릿 메서드 패턴으로 구현되어 있다  궁금한 내용  Servlet은 요청이 있을 때 get으로 요청된건지 post로 요청된건지 어떻게 알 수 있는지 템플릿 메서드 패턴  </description>
    </item>
    
    <item>
      <title>190831</title>
      <link>https://chunbong.github.io/post/til/190831/</link>
      <pubDate>Sat, 31 Aug 2019 04:15:46 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190831/</guid>
      <description> Java Web Programming 새롭게 알게 된 내용  서블릿, JSP의 역할 서블릿 3.0 미만과 3.0 이상에서 작성 방법 HttpServletRequset, HttpServletResponse  궁금한 내용  HttpServlet HttpServletRequset, HttpServletResponse  </description>
    </item>
    
    <item>
      <title>190830</title>
      <link>https://chunbong.github.io/post/til/190830/</link>
      <pubDate>Fri, 30 Aug 2019 04:14:23 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190830/</guid>
      <description> Java Web Programming 새롭게 알게 된 내용  Java 웹 애플리케이션의 폴더 구조  웹 애플리케이션은 WAS에 의해 동작하기 때문에 미리 약속된 폴더 구조를 따라야 한다  WEB-INF&amp;gt;web.xml  웹 애플리케이션에 대한 정보를 다 가지고 있는데, servlet 3.0 미만에서는 필수이고, 3.0 이상에서는 어노테이션을 사용해서 대신할 수 있다   궁금한 내용  어노테이션  </description>
    </item>
    
    <item>
      <title>Java 웹 프로그래밍 기초 - 02. Servlet, Servlet 작성 방법</title>
      <link>https://chunbong.github.io/post/java_web_programming/basic-02-create-servlet-2/</link>
      <pubDate>Fri, 30 Aug 2019 02:12:00 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/basic-02-create-servlet-2/</guid>
      <description>부스트코스 - 웹 프로그래밍에서 배운 내용을 정리
 
Servlet  Java 웹 애플리케이션의 구성 요소 중 동적인 처리를 하는 프로그램의 역할을 한다 즉, 동적인 콘텐츠 제공을 위해서 프로그램을 수행, 페이지를 동적으로 만들어준다 WAS에서 동작하는 Java 클래스이다 HttpServlet 클래스를 상속받아야 한다  
Servlet 작성 방법 웹을 개발할 때 서블릿을 직접 써서 개발하기 보다 프레임워크를 사용해서 개발하는 경우가 더 많다. 하지만 프레임워크들도 서블릿이 없이는 동작할 수 없다.
서블릿 작성 방법은 서블릿의 버전에 따라 두 가지로 나뉘어진다.</description>
    </item>
    
    <item>
      <title>Spring Boot - GET 요청 처리</title>
      <link>https://chunbong.github.io/post/java_web_programming/fastcampus-admin-project-02/</link>
      <pubDate>Thu, 29 Aug 2019 21:11:52 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/fastcampus-admin-project-02/</guid>
      <description>패스트캠퍼스 강의 내용을 정리
 
컨트롤러 사용자의 요청을 받기 위해 주소를 설정해야 한다.
컨트롤러는 주소들의 묶음을 모아놓은 것을 말한다

GET 요청 처리 방법 @RestController @RequestMapping(&amp;#34;/api&amp;#34;) public class GetController { @RequestMapping(method = RequestMethod.GET, path = &amp;#34;/getMethod&amp;#34;) public String getRequest() { return &amp;#34;Hi getMethod&amp;#34;; } }  @RestController  spring에게 &amp;ldquo;해당 클래스를 RestController로 사용할거야&amp;rdquo;라고 알려주는 어노테이션  @RequestMapping(&amp;quot;/api&amp;quot;)  API 주소를 매핑하기 위해 사용하는 어노테이션 어떤 주소를 받을 것인지 path를 지정 localhost:8080/api 까지 주소가 매핑된다  @RequestMapping(method = RequestMethod.</description>
    </item>
    
    <item>
      <title>190829</title>
      <link>https://chunbong.github.io/post/til/190829/</link>
      <pubDate>Thu, 29 Aug 2019 04:12:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190829/</guid>
      <description> 알고리즘 새롭게 알게 된 내용  소수 찾기 → 에라토스테네스의 체를 사용해서  궁금한 내용  python int의 최대값
import sys a = sys.maxsize + sys.maxsize print(a) print(type(a)) # 18446744073709551614 # &amp;lt;class &amp;#39;int&amp;#39;&amp;gt; maxsize 값을 넘어도 여전히 int네&amp;hellip; 👌
  </description>
    </item>
    
    <item>
      <title>소수 판별 알고리즘</title>
      <link>https://chunbong.github.io/post/algorithm/prime-number-01/</link>
      <pubDate>Thu, 29 Aug 2019 03:15:29 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/prime-number-01/</guid>
      <description>백준 강의 내용 정리
 
 약수가 1과 자기 자신 밖에 없는 수  
어떤 수가 소수인지 아닌지 판별하는 방법 n이 소수가 아니라면,
루트 n 보다 작거나 같은 수 1개와 이에 대응하는 루트 n 보다 크거나 같은 수의 곱으로 표현할 수 있다. 따라서 루트 n까지만 검색해보면 어떤 수가 소수인지 아닌지 판별할 수 있다
def prime(n): if n &amp;lt; 2: return False i = 2 while i*i &amp;lt;= n: if n % i == 0: return False return True  i는 정수인데 루트 n은 실수이기 때문에 정수-정수 비교를 위해 i*i ≤ n 식을 사용</description>
    </item>
    
    <item>
      <title>Java 웹 프로그래밍 기초 - 01. HelloWorld 서블릿 만들어보기 ✌️</title>
      <link>https://chunbong.github.io/post/java_web_programming/basic-01-create-servlet/</link>
      <pubDate>Thu, 29 Aug 2019 02:15:19 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/basic-01-create-servlet/</guid>
      <description>  부스트코스 - 웹 프로그래밍에서 배운 내용을 정리
 
목표 http://localhost:8080/firstweb/HelloServlet 접속시 응답

Servlet 생성, URL Mapping  HttpServlet을 상속하는 HelloSevlet class를 생성 eclipse Servlet 생성 창에서 URL Mappings를 확인할 수 있다 eclipse는 runtime으로 설정된 WAS에 다음과 같은 규칙의 URL로 Servlet을 실행하도록 설정한다
http://IP주소:PORT/{프로젝트이름}/{URL Mapping 값}   
Servlet 구현  웹 브라우저가 GET 메서드 방식으로 요청을 보낼 때 Servlet의 doGet() 메서드가 호출된다 @WebServlet : URL Mapping을 위한 어노테이션 HttpServletResponse , HttpServletRequset : 응답, 요청에 필요한 내용들을 모아서 추상화 해놓은 객체 setContentType() : 응답 결과에 대해 브라우저에게 알려주는 내용  브라우저를 확인해보면 Response Headers의 Content-Type 값으로 설정된다  getWriter() : 응답 내용을 넣어줄 통로, PrintWriter 객체를 return  </description>
    </item>
    
    <item>
      <title>Spring Boot - admin 프로젝트 주제 &amp; 목표</title>
      <link>https://chunbong.github.io/post/java_web_programming/fastcampus-admin-project-01/</link>
      <pubDate>Thu, 29 Aug 2019 01:10:22 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/java_web_programming/fastcampus-admin-project-01/</guid>
      <description>  패스트캠퍼스 강의 내용을 정리
 
주제 Admin Site  기존 Admin page의 부족한 기능 개발을 통해 서비스의 이해, 용어, 환경, 데이터베이스 구성, 비즈니스의 흐름을 파악 가능 이러한 이해를 바탕으로 다른 프로젝트에 투입  
목표  7개의 테이블이 있는 Admin Site를 개발 사용자가 쇼핑몰에서 아이템을 구매하거나, 관리자가 외부 업체를 관리하는 Admin Site 1000명의 유저와 구매 내역이 5000개가 넘는 데이터를 다룸 Spring Boot를 사용 신규 주문, 신규 유저, 신규 파트너, 신규 상품을 볼 수 있는 대시보드를 제공 고객 관리, 상품 관리, 파트너사 관리, 주문 관리, 카테고리 관리, 어드민 사용자 관리 메뉴를 제공  </description>
    </item>
    
    <item>
      <title>190828</title>
      <link>https://chunbong.github.io/post/til/190828/</link>
      <pubDate>Wed, 28 Aug 2019 04:09:49 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190828/</guid>
      <description>Java &amp;amp; Java Web Programming 새롭게 알게 된 내용  서블릿 이클립스는 톰캣에 어떤 규칙의 URL일 때 어떤 서블릿을 실행하도록 설정한다 웹 브라우저가 GET 요청을 보낼 때 서블릿의 doGet()이 호출된다 요청에 대한 응답으로 뭔가 출력하기 위해서는 입출력스트림을 사용한다  궁금한 내용  환경변수를 설정하는 이유 JDK 버전을 바꿀 때 수정해야 할 환경변수 PrintWriter 서블릿은 요청이 어떤 method인지 어떻게 알지..?  
Django 새롭게 알게 된 내용  python shell을 이용해서 데이터베이스 다루기 model 객체를 이용해서 데이터베이스 다루기 view와 template을 분리해서 데이터베이스 조회 결과를 html 파일에서 다루기 Django Template Language(DTL)은 Django가 기본적으로 가지고 있는 템플릿 언어이고, Jinja2 외 다른 템플릿 엔진을 사용할 수도 있다.</description>
    </item>
    
    <item>
      <title>190827</title>
      <link>https://chunbong.github.io/post/til/190827/</link>
      <pubDate>Tue, 27 Aug 2019 04:04:24 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190827/</guid>
      <description>Python 새롭게 알게 된 내용  얕은 복사, 깊은 복사 copy.deepcopy  
알고리즘  BOJ - N-Queen, 구슬 탈출4 문제 해결  새롭게 알게 된 내용  백트래킹을 적용해야 될 때 BFS를 적용해야 될 때 배열에서 같은 행, 같은 열, 대각선에 놓인 값들의 상태를 확인할 때 1차원 배열을 사용하는 방법 재귀 함수를 사용해서 브루트 포스를 진행할 경우, 재귀 함수 호출 이전에 수행했던 작업을 재귀 함수 호출 이후 원래 상태로 돌려 놓아야 한다  궁금한 내용  구슬 탈출4를 어떻게 하면 좀 더 쉽게 풀 수 있을까&amp;hellip;</description>
    </item>
    
    <item>
      <title>190826</title>
      <link>https://chunbong.github.io/post/til/190826/</link>
      <pubDate>Mon, 26 Aug 2019 04:00:19 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/til/190826/</guid>
      <description>Spring Boot 새롭게 알게 된 내용  Spring Boot는 Spring의 복잡한 설정을 미리 내장하고 있고, 어노테이션을 사용해 간편하게 설정할 수 있도록 개발된 경량의 프레임워크 → Spring과 Tomcat도 내장하고 있음 Client의 요청을 처리하기 위해 → 주소 설정이 필요 → Controller를 정의 Client의 GET 요청을 어떤 주소로 받아서 처리할 것인가  @RequestMapping, @GetMapping 두 어노테이션을 사용해 주소를 Mapping할 수 있음  주소 창에 노출된 parameter를 처리하기 위한 GET method 설정 방법  @RequestParam, 객체를 사용할 수 있음  GET을 처리하는 method의 return 값  jackson 라이브러리가 알아서 json 형태로 바꿔서 return   궁금한 내용  Gradle Socket 통신, HTTP 통신 DispatcherServlet 네트워크 통신 포맷 HTTP GET Method</description>
    </item>
    
  </channel>
</rss>