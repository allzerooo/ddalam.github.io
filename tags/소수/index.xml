<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>소수 on Chunbong</title>
    <link>https://chunbong.github.io/tags/%EC%86%8C%EC%88%98/</link>
    <description>Recent content in 소수 on Chunbong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Sep 2019 03:17:48 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/tags/%EC%86%8C%EC%88%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>프로그래머스 - 소수 찾기</title>
      <link>https://chunbong.github.io/post/algorithm/problem-09-programmers01/</link>
      <pubDate>Thu, 12 Sep 2019 03:17:48 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-09-programmers01/</guid>
      <description>문제
 
Code from itertools import permutations def solution(numbers): answer = 0 # str -&amp;gt; list splitNumbers = list(numbers) # 입력으로 주어진 숫자들로 가장 큰 수를 만들기 temp = sorted(numbers, reverse=True) temp = &amp;#39;&amp;#39;.join(temp) maxNumber = int(temp) # 0 ~ 가장 큰 수까지 모든 소수 찾기 primeNumbers = [0] * (maxNumber + 1) primeNumbers[0], primeNumbers[1] = -1, -1 for i in range(2, maxNumber+1): j = i * i while j &amp;lt;= maxNumber: primeNumbers[j] = -1 j += i # 1자리 수부터 가능한 모든 자리의 수가 소수인지 확인 check = [False] * (maxNumber + 1) for length in range(1, len(numbers)+1): permutationList = permutations(splitNumbers, length) permutationList = set(permutationList) for number in permutationList: number = &amp;#39;&amp;#39;.</description>
    </item>
    
  </channel>
</rss>