<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>소수 알고리즘 on Chunblog</title>
    <link>https://chunbong.github.io/tags/%EC%86%8C%EC%88%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
    <description>Recent content in 소수 알고리즘 on Chunblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2019 03:15:29 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/tags/%EC%86%8C%EC%88%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>소수 판별 알고리즘</title>
      <link>https://chunbong.github.io/post/algorithm/01-prime-number/</link>
      <pubDate>Thu, 29 Aug 2019 03:15:29 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/01-prime-number/</guid>
      <description>백준 강의 내용 정리
 
 약수가 1과 자기 자신 밖에 없는 수  
어떤 수가 소수인지 아닌지 판별하는 방법 n이 소수가 아니라면,
루트 n 보다 작거나 같은 수 1개와 이에 대응하는 루트 n 보다 크거나 같은 수의 곱으로 표현할 수 있다. 따라서 루트 n까지만 검색해보면 어떤 수가 소수인지 아닌지 판별할 수 있다
def prime(n): if n &amp;lt; 2: return False i = 2 while i*i &amp;lt;= n: if n % i == 0: return False return True  i는 정수인데 루트 n은 실수이기 때문에 정수-정수 비교를 위해 i*i ≤ n 식을 사용</description>
    </item>
    
  </channel>
</rss>