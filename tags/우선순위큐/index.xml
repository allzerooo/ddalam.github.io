<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>우선순위큐 on Chunbong</title>
    <link>https://chunbong.github.io/tags/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90/</link>
    <description>Recent content in 우선순위큐 on Chunbong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2019 03:11:20 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/tags/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2018년 KAKAO BLIND RECRUITMENT - 무지의 먹방 라이브</title>
      <link>https://chunbong.github.io/post/algorithm/problem-04-kakaoblind-04/</link>
      <pubDate>Mon, 09 Sep 2019 03:11:20 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-04-kakaoblind-04/</guid>
      <description>문제
 
Code from queue import PriorityQueue def solution(food_times, k): answer = 0 if sum(food_times) &amp;lt;= k: return -1 # (food_times, index)를 사용해 우선순위 큐를 생성 q = PriorityQueue() for i in range(len(food_times)): q.put((food_times[i], i+1)) length = len(food_times) remaining_k = k prev = 0 while (q.queue[0][0] - prev) * length &amp;lt;= remaining_k: remaining_k -= ((q.queue[0][0] - prev) * length) length -= 1 prev = q.get()[0] # 큐에 남아있는 원소를 원래 순서대로 다시 정렬 temp = sorted(q.</description>
    </item>
    
  </channel>
</rss>