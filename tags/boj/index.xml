<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BOJ on Chunbong</title>
    <link>https://chunbong.github.io/tags/boj/</link>
    <description>Recent content in BOJ on Chunbong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Sep 2019 03:17:48 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/tags/boj/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOJ_2512 예산</title>
      <link>https://chunbong.github.io/post/algorithm/problem-08-boj2512/</link>
      <pubDate>Wed, 11 Sep 2019 03:17:48 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-08-boj2512/</guid>
      <description>문제
 
Code answer = 0 n = int(input()) budgetRequest = list(map(int, input().split())) totalBudget = int(input()) sumBudgetRequest = sum(budgetRequest) if sumBudgetRequest &amp;lt; totalBudget: answer = max(budgetRequest) else: leftbound = 0 rightbound = max(budgetRequest) while leftbound &amp;lt;= rightbound: mid = (leftbound + rightbound) // 2 sumBudgetRequest = 0 for i in range(n): if budgetRequest[i] &amp;gt; mid: sumBudgetRequest += mid else: sumBudgetRequest += budgetRequest[i] if sumBudgetRequest &amp;lt;= totalBudget: if mid &amp;gt; answer: answer = mid leftbound = mid + 1 else: rightbound = mid - 1 print(answer)</description>
    </item>
    
    <item>
      <title>BOJ_2805 나무 자르기</title>
      <link>https://chunbong.github.io/post/algorithm/problem-07-boj2805/</link>
      <pubDate>Wed, 11 Sep 2019 03:17:06 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-07-boj2805/</guid>
      <description>문제
 
Code n, m = map(int, input().split()) h = list(map(int, input().split())) maxH = max(h) leftbound = 0 rightbound = maxH answer = 0 while leftbound &amp;lt;= rightbound: mid = (rightbound + leftbound) // 2 takenLength = 0 for i in range(n): if h[i] &amp;gt; mid: takenLength += (h[i] - mid) if takenLength &amp;gt;= m: leftbound = mid + 1 answer = mid else: rightbound = mid - 1 print(answer)</description>
    </item>
    
    <item>
      <title>BOJ_1920 수 찾기</title>
      <link>https://chunbong.github.io/post/algorithm/problem-05-boj1920/</link>
      <pubDate>Mon, 09 Sep 2019 03:14:59 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-05-boj1920/</guid>
      <description>문제
 
Code - 이진탐색 import sys sys.setrecursionlimit(10000) n = int(input()) a = list(map(int, input().split())) m = int(input()) nums = list(map(int, input().split())) def binary_search(target, start, end, data): if start &amp;gt; end: return 0 mid = (start + end) // 2 if data[mid] == target: return 1 if data[mid] &amp;lt; target: start = mid + 1 else: end = mid - 1 return binary_search(target, start, end, data) a.sort() for i in range(m): print(binary_search(nums[i], 0, n-1, a))</description>
    </item>
    
  </channel>
</rss>