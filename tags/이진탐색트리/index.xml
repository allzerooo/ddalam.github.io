<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>이진탐색트리 on Chunbong</title>
    <link>https://chunbong.github.io/tags/%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89%ED%8A%B8%EB%A6%AC/</link>
    <description>Recent content in 이진탐색트리 on Chunbong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Sep 2019 03:23:20 +0900</lastBuildDate>
    
	<atom:link href="https://chunbong.github.io/tags/%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89%ED%8A%B8%EB%A6%AC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2018년 KAKAO BLIND RECRUITMENT - 길 찾기 게임</title>
      <link>https://chunbong.github.io/post/algorithm/problem-06-kakaoblind-05/</link>
      <pubDate>Tue, 10 Sep 2019 03:23:20 +0900</pubDate>
      
      <guid>https://chunbong.github.io/post/algorithm/problem-06-kakaoblind-05/</guid>
      <description>문제
 
Code import sys sys.setrecursionlimit(10**6) from operator import itemgetter class Tree: def __init__(self, nodeinfo): self.data = nodeinfo[0] self.nodeNum = self.data[2] leftList = list(filter(lambda x: x[0] &amp;lt; self.data[0], nodeinfo)) rightList = list(filter(lambda x: x[0] &amp;gt; self.data[0], nodeinfo)) if leftList != []: self.left = Tree(leftList) else: self.left = None if rightList != []: self.right = Tree(rightList) else: self.right = None def preorder(root, preorderList): if root is None: return preorderList.</description>
    </item>
    
  </channel>
</rss>